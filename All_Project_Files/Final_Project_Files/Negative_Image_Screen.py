# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Negative_Image_Screen.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5 import QtCore, QtGui, QtWidgets, uic
from PyQt5.QtGui import *
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
from PyQt5.uic import loadUi
from PyQt5 import QtWidgets
from PyQt5.QtWidgets import QDialog, QApplication, QWidget, QStackedWidget, QComboBox, QPushButton, QVBoxLayout, QLabel
from PyQt5.QtGui import QPixmap
from PyQt5.QtWidgets import QFileDialog
import cv2
import numpy as np

class Ui_Background(object):
    def setupUi(self, Background):
        Background.setObjectName("Background")
        Background.resize(1201, 801)
        self.label_3 = QtWidgets.QLabel(Background)
        self.label_3.setGeometry(QtCore.QRect(590, 260, 61, 31))
        self.label_3.setStyleSheet("font: 22pt \"MS Shell Dlg 2\";")
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setObjectName("label_3")
        self.label = QtWidgets.QLabel(Background)
        self.label.setGeometry(QtCore.QRect(20, 40, 511, 461))
        self.label.setText("")
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(Background)
        self.label_2.setGeometry(QtCore.QRect(700, 40, 481, 461))
        self.label_2.setText("")
        self.label_2.setObjectName("label_2")
        self.Open_Image_Button = QtWidgets.QPushButton(Background)
        self.Open_Image_Button.setGeometry(QtCore.QRect(80, 580, 401, 81))
        self.Open_Image_Button.setObjectName("Open_Image_Button")
        self.label_4 = QtWidgets.QLabel(Background)
        self.label_4.setGeometry(QtCore.QRect(800, 600, 281, 41))
        self.label_4.setStyleSheet("font: 16pt \"MS Shell Dlg 2\";")
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setObjectName("label_4")

        self.retranslateUi(Background)
        QtCore.QMetaObject.connectSlotsByName(Background)

    def retranslateUi(self, Background):
        _translate = QtCore.QCoreApplication.translate
        Background.setWindowTitle(_translate("Background", "Dialog"))
        self.label_3.setText(_translate("Background", "=>"))
        self.Open_Image_Button.setText(_translate("Background", "Open Image"))
        self.label_4.setText(_translate("Background", "Output Image"))

        self.Open_Image_Button.clicked.connect(self.File_Select)


    def File_Select(self):
        # fname = QFileDialog.getOpenFileName(self, "Open File", "All_Project_Files\Final_Project_Files\Cam_Media", "Images (*.png *.xpm *.jpg)")
        # # Opening the Image
        # self.pixmap = QPixmap(fname[0]) # This returns a tuple and hence we mention [0].
        # # Adding the picture to the Label.
        # self.label.setPixmap(self.pixmap)
        file_name, _ = QFileDialog.getOpenFileName(None, 'Open Image File', r"<Default dir>", "Image files (*.jpg *.jpeg *.gif *.png)")
        self.label.setPixmap(QPixmap(file_name))
        img = cv2.imread(file_name)
        maximum = np.amax(img)
        negative_img = maximum - img
        cv2.imwrite(r"Image_Processing\All_Project_Files\Final_Project_Files\Cam_Media\Negative_Images\Negative_Image.png", negative_img)
        Negative_File_Name = r"Image_Processing\All_Project_Files\Final_Project_Files\Cam_Media\Negative_Images\Negative_Image.png"
        self.label_2.setPixmap(QPixmap(Negative_File_Name))


        # If you want these to display these in separate windows other than GUI.
        # cv2.imshow("Negative Image", negative_img)


        # cv2.imshow("Image", img)
        # cv2.waitKey(0)
  
        # # closing all open windows
        # cv2.destroyAllWindows()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Background = QtWidgets.QDialog()
    ui = Ui_Background()
    ui.setupUi(Background)
    Background.show()
    sys.exit(app.exec_())
